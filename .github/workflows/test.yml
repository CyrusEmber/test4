name: CMake
run-name: ${{ github.actor }} is building the project ðŸš€

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  TEST_DIR: "new"
  IQTREE1_VERSION: "iqtree"
  IQTREE2_VERSION: "iqtree2"
  BIN_DIR: "bin"
  CONFIG_DIR: "config.yml"
  IQTREE1_RESULT: "iqtree1_result.yml"
  IQTREE2_RESULT: "iqtree2_result.yml"
  IQTREE2_LOG: "iqtree2.log"
  COMPARE_OUTPUT: "result.yml"
  IMG_OUTPUT: "compare_result.png"

jobs:
  compile:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.7" ]

    steps:
      - uses: actions/checkout@v3

      # Install dependency
      - name: Update apt
        run: sudo apt update
      - name: Install Eigen3
        run: sudo apt install -y libeigen3-dev
      - name: Find eigen3 installation location
        run: dpkg -L libeigen3-dev | grep eigen3
      - name: Install Boost
        run: sudo apt-get install libboost-all-dev

      # Update submodules so the missing lsd2 is fixed
      - name: Initialize submodules
        run: git submodule init

      - name: Update submodules
        run: git submodule update --recursive

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory.
        # `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      # working-directory: ${{github.workspace}}/build
      # upload to artifact for other jobs
      - name: Upload iqtree2 build file
        uses: actions/upload-artifact@v3
        with:
          name: iqtree2
          path: build/iqtree2

  test_iqtree2_build:
    # do test for newly build iqtree2
    runs-on: ubuntu-latest
    needs: compile
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # download the build file into bin directory of test dir
      - name: Download iqtree2 build file
        uses: actions/download-artifact@v3
        with:
          name: iqtree2
          path: ${{env.TEST_DIR}}/bin

      - name: Install dependency
        run: |
          python -m pip install --upgrade pip
          cd ${{env.TEST_DIR}}
          pip install -r requirements.txt

      - name: Run test for iqtree2
        run: |
          cd ${{env.TEST_DIR}}
          chmod +x bin/iqtree2
          python3 test.py -v ${{env.IQTREE2_VERSION}} -b ${{env.BIN_DIR}} -c ${{env.CONFIG_DIR}} -o ${{env.IQTREE2_RESULT}}

      - name: Upload the test result for iqtree2
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.IQTREE2_RESULT}}
          path: ${{env.TEST_DIR}}/${{env.IQTREE2_RESULT}}


  test_iqtree1:
    # could support multiple platform and multiple version of python
    # test on iqtree 1 and upload the result to artifact
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.7" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependency
        run: |
          python -m pip install --upgrade pip
          cd ${{env.TEST_DIR}}
          pip install -r requirements.txt


      # test iqtree1
      - name: testing
        run: |
          cd ${{env.TEST_DIR}}
          chmod +x bin/iqtree
          python3 test.py -v ${{env.IQTREE1_VERSION}} -b ${{env.BIN_DIR}} -c ${{env.CONFIG_DIR}} -o ${{env.IQTREE1_RESULT}}

      - name: upload the test result for iqtree1
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.IQTREE1_RESULT}}
          path: ${{env.TEST_DIR}}/${{env.IQTREE1_RESULT}}


  compare_test:
    # get the result1 and result2 from artifact then compare the result
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.7" ]

    needs: [test_iqtree2_build, test_iqtree1]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download result for iqtree2
        uses: actions/download-artifact@v3
        with:
          name: ${{env.IQTREE2_RESULT}}
          path: ${{env.TEST_DIR}}

      - name: Download result for iqtree1
        uses: actions/download-artifact@v3
        with:
          name: ${{env.IQTREE1_RESULT}}
          path: ${{env.TEST_DIR}}

      - name: Install dependency
        run: |
          python -m pip install --upgrade pip
          cd ${{env.TEST_DIR}}
          pip install -r requirements.txt

      # compare with the result and generate a result yml file and a compare graph
      - name: Compare test
        run: |
          cd ${{env.TEST_DIR}}
          python3 test_compare.py -1 ${{env.IQTREE1_RESULT}} -2 ${{env.IQTREE2_RESULT}} -o ${{env.COMPARE_OUTPUT}} -i ${{env.IMG_OUTPUT}}
        # -o compare result.png

      - name: Upload the overall result
        uses: actions/upload-artifact@v3
        with:
          name: result.yml
          path: ${{env.TEST_DIR}}/result.yml

      - name: Upload and display the result comparison graph
        uses: actions/upload-artifact@v3
        with:
          name: comparison graph
          path: ${{env.TEST_DIR}}/${{env.IMG_OUTPUT}}

      # See https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-personal-account-on-github/managing-email-preferences/setting-your-commit-email-address
      - name: Send email
        run: |
          cd ${{env.TEST_DIR}}
          python3 send_email.py -t ${{github.event.pusher.email}} -r ${{env.COMPARE_OUTPUT}} -g ${{github.repository}} -a ${{env.IMG_OUTPUT}} -l ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}



